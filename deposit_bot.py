import logging
import re
from datetime import datetime, date, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
import json
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°—Ç–∞–≤–∫–∏ –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º
RATES = {
    'KGS': { 3: 6.0, 6: 10.0, 12: 14.5, 24: 14.5 },
    'USD': { 3: 2.0, 6: 2.5, 12: 4.0, 24: 4.0 },
    'EUR': { 3: 0.6, 6: 1.2, 12: 1.5, 24: 1.3 }
}

CURRENCY_SYMBOLS = {
    'KGS': '—Å–æ–º',
    'USD': '$',
    'EUR': '‚Ç¨'
}

# FAQ –∏ –æ—Ç–≤–µ—Ç—ã
FAQ = {
    '–∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç—ã': """
üìä **–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –¥–µ–ø–æ–∑–∏—Ç—É:**

‚Ä¢ **–î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç–∏—è**: –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ù–ï –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è
‚Ä¢ **–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–∞—Å—á–µ—Ç**: (–ë–∞–ª–∞–Ω—Å √ó –°—Ç–∞–≤–∫–∞) √∑ 360
‚Ä¢ **–î–æ–≤–∫–ª–∞–¥—ã**: –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∑–∞ –¥–µ–Ω—å –¥–æ–≤–∫–ª–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ —Å—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å, –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
‚Ä¢ **31-–µ —á–∏—Å–ª–æ**: –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ù–ï –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è
‚Ä¢ **–§–µ–≤—Ä–∞–ª—å**: –≤—Å–µ–≥–¥–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ 30 –¥–Ω–µ–π
‚Ä¢ **–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü**: –≤—Å–µ–≥–¥–∞ 29 –¥–Ω–µ–π

**–ü—Ä–∏–º–µ—Ä**: –î–µ–ø–æ–∑–∏—Ç 100,000 —Å–æ–º –ø–æ–¥ 16.5% –≥–æ–¥–æ–≤—ã—Ö
–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–æ—Ö–æ–¥: 100,000 √ó 16.5% √∑ 360 = 45.83 —Å–æ–º–∞
""",
    
    '–∫–∞–∫–∏–µ –µ—Å—Ç—å –≤–∞–ª—é—Ç—ã': f"""
üí± **–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã –∏ —Å—Ç–∞–≤–∫–∏:**

**–°–æ–º (KGS):**
‚Ä¢ 3 –º–µ—Å—è—Ü–∞: {RATES['KGS'][3]}%
‚Ä¢ 6 –º–µ—Å—è—Ü–µ–≤: {RATES['KGS'][6]}%
‚Ä¢ 12 –º–µ—Å—è—Ü–µ–≤: {RATES['KGS'][12]}%
‚Ä¢ 24 –º–µ—Å—è—Ü–∞: {RATES['KGS'][24]}%

**–î–æ–ª–ª–∞—Ä (USD):**
‚Ä¢ 3 –º–µ—Å—è—Ü–∞: {RATES['USD'][3]}%
‚Ä¢ 6 –º–µ—Å—è—Ü–µ–≤: {RATES['USD'][6]}%
‚Ä¢ 12 –º–µ—Å—è—Ü–µ–≤: {RATES['USD'][12]}%
‚Ä¢ 24 –º–µ—Å—è—Ü–∞: {RATES['USD'][24]}%

**–ï–≤—Ä–æ (EUR):**
‚Ä¢ 3 –º–µ—Å—è—Ü–∞: {RATES['EUR'][3]}%
‚Ä¢ 6 –º–µ—Å—è—Ü–µ–≤: {RATES['EUR'][6]}%
‚Ä¢ 12 –º–µ—Å—è—Ü–µ–≤: {RATES['EUR'][12]}%
‚Ä¢ 24 –º–µ—Å—è—Ü–∞: {RATES['EUR'][24]}%
""",
    
    '—á—Ç–æ —Ç–∞–∫–æ–µ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è': """
üí° **–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤:**

–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è - —ç—Ç–æ –∫–æ–≥–¥–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—É–º–º–µ –¥–µ–ø–æ–∑–∏—Ç–∞ –∏ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —Ç–æ–∂–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –¥–æ—Ö–æ–¥.

**–ë–µ–∑ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:**
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç—ã –≤—ã–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ
‚Ä¢ –û—Å–Ω–æ–≤–Ω–∞—è —Å—É–º–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π

**–° –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π:**
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –¥–æ–≤–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é –µ–∂–µ–º–µ—Å—è—á–Ω–æ
‚Ä¢ –ü—Ä–∏ –¥–æ–≤–∫–ª–∞–¥–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –æ–Ω–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫ –¥–µ–ø–æ–∑–∏—Ç—É
‚Ä¢ –í —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω–Ω—É—é —Å—É–º–º—É
‚Ä¢ –û–±—â–∏–π –¥–æ—Ö–æ–¥ –≤—ã—à–µ –ø—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –¥–æ–≤–∫–ª–∞–¥–∞—Ö

**–ü—Ä–∏–º–µ—Ä**: 100,000 —Å–æ–º –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤ –ø–æ–¥ 14.5%
‚Ä¢ –ë–µ–∑ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: 14,500 —Å–æ–º
‚Ä¢ –° –µ–∂–µ–º–µ—Å—è—á–Ω—ã–º–∏ –¥–æ–≤–∫–ª–∞–¥–∞–º–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤: ~15,600 —Å–æ–º (+1,100 —Å–æ–º)

üí° **–í–∞–∂–Ω–æ**: –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä—É—á–Ω–æ–º –¥–æ–≤–∫–ª–∞–¥–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤!
""",
    
    '–º–æ–∂–Ω–æ –ª–∏ –¥–æ–≤–∫–ª–∞–¥—ã–≤–∞—Ç—å': """
‚úÖ **–î–æ–≤–∫–ª–∞–¥—ã (–ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è):**

–î–∞, –º–æ–∂–Ω–æ –¥–æ–≤–∫–ª–∞–¥—ã–≤–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–∞!

**–ü—Ä–∞–≤–∏–ª–∞ –¥–æ–≤–∫–ª–∞–¥–æ–≤:**
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1,000 —Å–æ–º / 100 USD / 100 EUR
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç—ã –∑–∞ –¥–µ–Ω—å –¥–æ–≤–∫–ª–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ —Å—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å
‚Ä¢ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
‚Ä¢ –ü—Ä–∏ –¥–æ–≤–∫–ª–∞–¥–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ—Å—á–µ—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤—ã–ø–ª–∞—Ç—ã

**–ü—Ä–∏–º–µ—Ä**: 
1 —è–Ω–≤–∞—Ä—è: –¥–µ–ø–æ–∑–∏—Ç 100,000 —Å–æ–º
15 —è–Ω–≤–∞—Ä—è: –¥–æ–≤–∫–ª–∞–¥ 50,000 —Å–æ–º
‚Ä¢ 14 —è–Ω–≤–∞—Ä—è: –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞ 100,000 —Å–æ–º
‚Ä¢ 15 —è–Ω–≤–∞—Ä—è: –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞ 100,000 —Å–æ–º (—Å—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å)
‚Ä¢ 16 —è–Ω–≤–∞—Ä—è: –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞ 150,000 —Å–æ–º (–Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å)
""",
    
    '–∫–∞–∫ –¥–æ—Å—Ä–æ—á–Ω–æ –∑–∞–∫—Ä—ã—Ç—å': """
‚ö†Ô∏è **–î–æ—Å—Ä–æ—á–Ω–æ–µ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ:**

–î–µ–ø–æ–∑–∏—Ç –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ, –Ω–æ —Å –ø–æ—Ç–µ—Ä–µ–π –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤.

**–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è:**
‚Ä¢ –î–æ 30 –¥–Ω–µ–π: 0% –≥–æ–¥–æ–≤—ã—Ö
‚Ä¢ 31-90 –¥–Ω–µ–π: 1% –≥–æ–¥–æ–≤—ã—Ö
‚Ä¢ 91-180 –¥–Ω–µ–π: 2% –≥–æ–¥–æ–≤—ã—Ö
‚Ä¢ –ë–æ–ª–µ–µ 180 –¥–Ω–µ–π: 3% –≥–æ–¥–æ–≤—ã—Ö

**–ü—Ä–∏–º–µ—Ä**: –î–µ–ø–æ–∑–∏—Ç 100,000 —Å–æ–º –ø–æ–¥ 16.5% –∑–∞–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ 60 –¥–Ω–µ–π
‚Ä¢ –ü–æ —Å—Ç–∞–≤–∫–µ –¥–µ–ø–æ–∑–∏—Ç–∞: 2,750 —Å–æ–º
‚Ä¢ –ü–æ —Å—Ç–∞–≤–∫–µ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è: 167 —Å–æ–º
‚Ä¢ –ü–æ—Ç–µ—Ä—è: 2,583 —Å–æ–º

üí° **–°–æ–≤–µ—Ç**: –õ—É—á—à–µ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ!
""",
    
    '–Ω–∞–ª–æ–≥–∏': """
üí∞ **–ù–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤:**

**–§–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞:**
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º –ù–ï –æ–±–ª–∞–≥–∞—é—Ç—Å—è –Ω–∞–ª–æ–≥–æ–º
‚Ä¢ –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–∞–≤–∞—Ç—å –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é

**–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞:**
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç—ã –æ–±–ª–∞–≥–∞—é—Ç—Å—è –Ω–∞–ª–æ–≥–æ–º –Ω–∞ –ø—Ä–∏–±—ã–ª—å
‚Ä¢ –°—Ç–∞–≤–∫–∞: 10%

**–í–∞–ª—é—Ç–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã:**
‚Ä¢ –ö—É—Ä—Å–æ–≤—ã–µ —Ä–∞–∑–Ω–∏—Ü—ã –º–æ–≥—É—Ç –æ–±–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞–ª–æ–≥–æ–º
‚Ä¢ –£—Ç–æ—á–Ω–∏—Ç–µ —É –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
""",
    
    '—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ': """
üõ°Ô∏è **–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤:**

–í—Å–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω—ã –ê–≥–µ–Ω—Ç—Å—Ç–≤–æ–º –ø–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—é –≤–∫–ª–∞–¥–æ–≤ (–ê–°–í).

**–õ–∏–º–∏—Ç—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è:**
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: 700,000 —Å–æ–º –Ω–∞ –æ–¥–Ω–æ–≥–æ –≤–∫–ª–∞–¥—á–∏–∫–∞
‚Ä¢ –ü–æ–∫—Ä—ã–≤–∞–µ—Ç: —Å–æ–º, –¥–æ–ª–ª–∞—Ä—ã, –µ–≤—Ä–æ
‚Ä¢ –°—Ä–æ–∫ –≤—ã–ø–ª–∞—Ç—ã: –¥–æ 14 –¥–Ω–µ–π

**–ß—Ç–æ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç—Å—è:**
‚Ä¢ –û—Å–Ω–æ–≤–Ω–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
‚Ä¢ –ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã
‚Ä¢ –î–æ–≤–∫–ª–∞–¥—ã

**–ß—Ç–æ –ù–ï –ø–æ–∫—Ä—ã–≤–∞–µ—Ç—Å—è:**
‚Ä¢ –î–µ–ø–æ–∑–∏—Ç—ã –Ω–∞ –ø—Ä–µ–¥—ä—è–≤–∏—Ç–µ–ª—è
‚Ä¢ –î–µ–ø–æ–∑–∏—Ç—ã –≤ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –º–µ—Ç–∞–ª–ª–∞—Ö
‚Ä¢ –î–µ–ø–æ–∑–∏—Ç—ã –≤ —Ç—Ä–∞—Å—Ç–æ–≤–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
"""
}

def format_number(num):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏"""
    if isinstance(num, (int, float)):
        return f"{num:,.2f}".replace(',', ' ').replace('.', ',')
    return str(num)

def currency_symbol(currency):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –≤–∞–ª—é—Ç—ã"""
    return CURRENCY_SYMBOLS.get(currency, currency)

def is_same_day(d1, d2):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–≤–µ –¥–∞—Ç—ã - –æ–¥–∏–Ω –¥–µ–Ω—å"""
    return d1.year == d2.year and d1.month == d2.month and d1.day == d2.day

def calculate_deposit(currency, term, start_date, initial_amount, deposits=None, capitalization=False):
    """–†–∞—Å—á–µ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞"""
    if deposits is None:
        deposits = []
    
    rate = RATES[currency][term]
    open_day = start_date.day
    
    # –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞
    end_date = start_date + timedelta(days=term * 30 - 1)  # 30 –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç
    all_deposits = [{'date': start_date, 'amount': initial_amount, 'is_initial': True}] + deposits
    all_deposits.sort(key=lambda x: x['date'])
    
    total_interest = 0
    total_principal = sum(dep['amount'] for dep in all_deposits)
    
    interest_bearing_balance = 0
    deposit_index = 0
    monthly_interests = {}
    accumulated_interest = 0
    
    current_date = start_date
    
    while current_date <= end_date:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–≤–∫–ª–∞–¥—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
        while deposit_index < len(all_deposits) and is_same_day(all_deposits[deposit_index]['date'], current_date):
            interest_bearing_balance += all_deposits[deposit_index]['amount']
            deposit_index += 1
        
        # –†–∞—Å—á–µ—Ç –¥–Ω–µ–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
        daily_interest = 0
        if not is_same_day(current_date, start_date):
            daily_interest = (interest_bearing_balance * rate) / (360 * 100)
        
        # 31-–µ —á–∏—Å–ª–æ - –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–µ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è
        effective_interest = 0 if current_date.day == 31 else daily_interest
        
        total_interest += effective_interest
        accumulated_interest += effective_interest
        
        # –£—á–µ—Ç –ø–æ –º–µ—Å—è—Ü–∞–º
        month_key = f"{current_date.year}-{current_date.month}"
        if month_key not in monthly_interests:
            monthly_interests[month_key] = 0
        monthly_interests[month_key] += effective_interest
        
        # –§–µ–≤—Ä–∞–ª—å - –≤—Å–µ–≥–¥–∞ 30 –¥–Ω–µ–π
        if current_date.month == 2:
            days_in_feb = 29 if current_date.year % 4 == 0 and (current_date.year % 100 != 0 or current_date.year % 400 == 0) else 28
            if current_date.day == days_in_feb:
                extra_days = 30 - days_in_feb
                if extra_days > 0:
                    extra_interest = extra_days * ((interest_bearing_balance * rate) / (360 * 100))
                    total_interest += extra_interest
                    accumulated_interest += extra_interest
                    monthly_interests[month_key] += extra_interest
        
        # –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è
        if capitalization:
            last_day_of_month = (current_date.replace(day=1) + timedelta(days=32)).replace(day=1) - timedelta(days=1)
            is_capitalization_day = (current_date.day == open_day) or (open_day > last_day_of_month.day and current_date.day == last_day_of_month.day)
            
            if is_capitalization_day and not is_same_day(current_date, start_date):
                interest_bearing_balance += accumulated_interest
                accumulated_interest = 0
        
        current_date += timedelta(days=1)
    
    total_amount = interest_bearing_balance + accumulated_interest if capitalization else total_principal + total_interest
    
    return {
        'total_interest': total_interest,
        'total_amount': total_amount,
        'monthly_interests': monthly_interests,
        'rate': rate
    }

def parse_natural_language(text):
    """–ü–∞—Ä—Å–∏–Ω–≥ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞"""
    text = text.lower().strip()
    
    # –ü–æ–∏—Å–∫ –≤–∞–ª—é—Ç—ã
    currency = None
    if any(word in text for word in ['—Å–æ–º', '–∫–≥—Å', 'kgs']):
        currency = 'KGS'
    elif any(word in text for word in ['–¥–æ–ª–ª–∞—Ä', '–¥–æ–ª–ª–∞—Ä—ã', 'usd', '$']):
        currency = 'USD'
    elif any(word in text for word in ['–µ–≤—Ä–æ', 'eur', '‚Ç¨']):
        currency = 'EUR'
    
    # –ü–æ–∏—Å–∫ —Å—É–º–º—ã
    amount_match = re.search(r'(\d+(?:[.,]\d+)?)\s*(?:—Ç—ã—Å—è—á|—Ç—ã—Å|k|–º–ª–Ω|–º–∏–ª–ª–∏–æ–Ω|—Å–æ–º–∞?|–¥–æ–ª–ª–∞—Ä–∞?|–µ–≤—Ä–æ?)?', text)
    amount = None
    if amount_match:
        amount_str = amount_match.group(1).replace(',', '.')
        amount = float(amount_str)
        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç—ã—Å—è—á/–º–∏–ª–ª–∏–æ–Ω–æ–≤
        if any(word in text for word in ['—Ç—ã—Å—è—á', '—Ç—ã—Å', 'k']):
            amount *= 1000
        elif any(word in text for word in ['–º–ª–Ω', '–º–∏–ª–ª–∏–æ–Ω']):
            amount *= 1000000
    
    # –ü–æ–∏—Å–∫ —Å—Ä–æ–∫–∞
    term = None
    if any(word in text for word in ['3', '—Ç—Ä–∏', '—Ç—Ä–µ—Ö']):
        term = 3
    elif any(word in text for word in ['6', '—à–µ—Å—Ç—å', '—à–µ—Å—Ç–∏']):
        term = 6
    elif any(word in text for word in ['12', '–≥–æ–¥', '–≥–æ–¥–æ–≤–æ–π', '–≥–æ–¥–æ–≤—ã—Ö']):
        term = 12
    elif any(word in text for word in ['24', '–¥–≤–∞ –≥–æ–¥–∞', '–¥–≤—É—Ö–ª–µ—Ç–Ω–∏–π']):
        term = 24
    
    # –ü–æ–∏—Å–∫ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
    capitalization = any(word in text for word in ['–∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è', '–∫–∞–ø–∏—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å', '—Å –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π'])
    
    return {
        'currency': currency,
        'amount': amount,
        'term': term,
        'capitalization': capitalization
    }

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = """
üè¶ **–î–µ–ø–æ–∑–∏—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä**

–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –ø–æ –¥–µ–ø–æ–∑–∏—Ç—É.

**–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º
‚Ä¢ –£—á–∏—Ç—ã–≤–∞—Ç—å –¥–æ–≤–∫–ª–∞–¥—ã –∏ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –º–µ—Å—è—Ü–∞–º

**–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–†–∞—Å—Å—á–∏—Ç–∞–π –¥–µ–ø–æ–∑–∏—Ç 100 —Ç—ã—Å—è—á —Å–æ–º –Ω–∞ –≥–æ–¥"
‚Ä¢ "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç —Å –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π?"
‚Ä¢ "–ö–∞–∫–∏–µ —Å—Ç–∞–≤–∫–∏ –ø–æ –¥–æ–ª–ª–∞—Ä–∞–º?"
‚Ä¢ "–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç—ã?"

–ù–∞—á–Ω–∏—Ç–µ —Å —Ä–∞—Å—á–µ—Ç–∞ –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å! üëá
"""
    
    keyboard = [
        [InlineKeyboardButton("üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç", callback_data="calculate")],
        [InlineKeyboardButton("‚ùì FAQ", callback_data="faq")],
        [InlineKeyboardButton("üìä –°—Ç–∞–≤–∫–∏", callback_data="rates")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text.lower()
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–∞—Ä—Å–∏–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    parsed = parse_natural_language(text)
    
    if parsed['amount'] and parsed['currency'] and parsed['term']:
        # –ï—Å—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
        start_date = date.today()
        result = calculate_deposit(
            currency=parsed['currency'],
            term=parsed['term'],
            start_date=start_date,
            initial_amount=parsed['amount'],
            capitalization=parsed['capitalization']
        )
        
        response = f"""
üí∞ **–†–∞—Å—á–µ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞**

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
‚Ä¢ –°—É–º–º–∞: {format_number(parsed['amount'])} {currency_symbol(parsed['currency'])}
‚Ä¢ –°—Ä–æ–∫: {parsed['term']} –º–µ—Å—è—Ü–µ–≤
‚Ä¢ –°—Ç–∞–≤–∫–∞: {result['rate']}% –≥–æ–¥–æ–≤—ã—Ö
‚Ä¢ –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: {'–î–∞' if parsed['capitalization'] else '–ù–µ—Ç'}

**–†–µ–∑—É–ª—å—Ç–∞—Ç:**
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç—ã: {format_number(result['total_interest'])} {currency_symbol(parsed['currency'])}
‚Ä¢ –ò—Ç–æ–≥–æ: {format_number(result['total_amount'])} {currency_symbol(parsed['currency'])}

**–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º:**
"""
        
        month_names = ["–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å", 
                      "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"]
        
        for key, interest in sorted(result['monthly_interests'].items()):
            if interest > 0:
                year, month = key.split('-')
                month_name = month_names[int(month)]
                response += f"‚Ä¢ {month_name} {year}: {format_number(interest)} {currency_symbol(parsed['currency'])}\n"
        
        await update.message.reply_text(response, parse_mode='Markdown')
        return
    
    # –ü–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    if any(phrase in text for phrase in ['–∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è', '–∫–∞–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è', '—Ñ–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞']):
        await update.message.reply_text(FAQ['–∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç—ã'], parse_mode='Markdown')
        return
        
    elif any(word in text for word in ['—Å—Ç–∞–≤–∫–∏', '—É—Å–ª–æ–≤–∏—è', '—Ç–∞—Ä–∏—Ñ—ã']) and '–∫–∞–∫' not in text:
        await update.message.reply_text(FAQ['–∫–∞–∫–∏–µ –µ—Å—Ç—å –≤–∞–ª—é—Ç—ã'], parse_mode='Markdown')
        return
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º FAQ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—á–µ—Ä–µ–¥—å
    for question, answer in FAQ.items():
        if any(word in text for word in question.split()):
            await update.message.reply_text(answer, parse_mode='Markdown')
            return
    
    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ
    help_text = """
ü§î –ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:

**–î–ª—è —Ä–∞—Å—á–µ—Ç–∞:**
‚Ä¢ "1000 —Å–æ–º –Ω–∞ –≥–æ–¥"
‚Ä¢ "50 —Ç—ã—Å—è—á –¥–æ–ª–ª–∞—Ä–æ–≤ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤"
‚Ä¢ "10 —Ç—ã—Å—è—á –µ–≤—Ä–æ –Ω–∞ 2 –≥–æ–¥–∞ —Å –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π"

**–î–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:**
‚Ä¢ "–ö–∞–∫–∏–µ —Å—Ç–∞–≤–∫–∏?"
‚Ä¢ "–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç—ã?"
‚Ä¢ "–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è?"
‚Ä¢ "–ú–æ–∂–Ω–æ –ª–∏ –¥–æ–≤–∫–ª–∞–¥—ã–≤–∞—Ç—å?"

–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá
"""
    keyboard = [
        [InlineKeyboardButton("üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å", callback_data="calculate")],
        [InlineKeyboardButton("‚ùì FAQ", callback_data="faq")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(help_text, reply_markup=reply_markup)

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "calculate":
        await query.edit_message_text(
            "üí∞ **–†–∞—Å—á–µ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞**\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
            "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
            "‚Ä¢ 100 —Ç—ã—Å—è—á —Å–æ–º –Ω–∞ –≥–æ–¥\n"
            "‚Ä¢ 50 —Ç—ã—Å—è—á –¥–æ–ª–ª–∞—Ä–æ–≤ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤\n"
            "‚Ä¢ 10 —Ç—ã—Å—è—á –µ–≤—Ä–æ –Ω–∞ 2 –≥–æ–¥–∞ —Å –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π\n\n"
            "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É, –≤–∞–ª—é—Ç—É –∏ —Å—Ä–æ–∫!",
            parse_mode='Markdown'
        )
        
    elif query.data == "faq":
        faq_text = """
‚ùì **–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã**

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:

‚Ä¢ –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç—ã?
‚Ä¢ –ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–∞–ª—é—Ç—ã –∏ —Å—Ç–∞–≤–∫–∏?
‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è?
‚Ä¢ –ú–æ–∂–Ω–æ –ª–∏ –¥–æ–≤–∫–ª–∞–¥—ã–≤–∞—Ç—å?
‚Ä¢ –ö–∞–∫ –¥–æ—Å—Ä–æ—á–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –¥–µ–ø–æ–∑–∏—Ç?
‚Ä¢ –ù–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å! üëá
"""
        await query.edit_message_text(faq_text, parse_mode='Markdown')
        
    elif query.data == "rates":
        await query.edit_message_text(FAQ['–∫–∞–∫–∏–µ –µ—Å—Ç—å –≤–∞–ª—é—Ç—ã'], parse_mode='Markdown')

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(CallbackQueryHandler(handle_callback))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    application.run_polling()

if __name__ == '__main__':
    main() 